spring.application.name=demo

# MySQL Database Configuration for Development (Docker)

# spring.datasource.url: Spring Bootアプリ(開発コンテナ)から見たMySQLコンテナの接続URL
# "mysql_db" は docker-compose.yml で定義したサービス名
# "3306" は MySQLコンテナがリッスンしているポート番号
# "myappdb" は docker-compose.yml で作成したデータベース名
spring.datasource.url=jdbc:mysql://172.20.0.2:3306/myappdb?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Tokyo

# docker-compose.yml で設定したユーザー名とパスワード
spring.datasource.username=myappuser
spring.datasource.password=myapppassword

# 使用するJDBCドライバ (MySQL 8用)
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA/Hibernate Settings
# Hibernateが使用するSQLの方言を指定
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect

# アプリケーション起動時にテーブル構造をどうするか (開発初期に便利)
# create: 起動時に毎回テーブルを削除して再作成
# create-drop: createと同じだが、終了時にテーブル削除
# update: 起動時にエンティティに合わせてテーブル構造を更新 (差分適用)
# validate: エンティティとテーブル構造が一致するか検証
# none: 何もしない (本番環境推奨)
spring.jpa.hibernate.ddl-auto=update

# (任意) Hibernateが実行するSQLをログに出力する
spring.jpa.show-sql=true
# (任意) 出力するSQLを整形する
spring.jpa.properties.hibernate.format_sql=true